version: 2.1

orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.5.0

commands:
  install-backend-dependencies:
    description: Install be dependencies
    steps:
      - run:
          name: Install Python dependencies
          command: |
            pip3 install pipenv
            export PIPENV_VENV_IN_PROJECT=True && cd server && pipenv --python 3.9
            pipenv install --skip-lock

  save-backend-cache:
     description: Save Pip packages to cache.
     steps:
       - save_cache:
           paths:
             - ./server/.venv
           key: python-dependencies-{{ checksum "./server/Pipfile.lock" }}

  load-backend-cache:
    description: Load cached Pip packages.
    steps:
      - restore_cache:
          keys:
            - python-dependencies-{{ checksum "./server/Pipfile.lock" }}


#backend-container: &backend-container
#  docker:
#    - image: circleci/python:3.7.9
#      environment:
#        DJANGO_DB_URL: psql://postgres@127.0.0.1:5432/circle_test
#        DJANGO_SECRET_KEY: 01001-sekret-for-test-purposes
#        DJANGO_REDIS_URL: redis://localhost:6379/1
#    - image: circleci/postgres:10.4-alpine-ram
#      environment:
#        POSTGRES_DB: circle_test
#    - image: circleci/redis:4.0-alpine


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test: # This is the name of the job, feel free to change it to better match what you're trying to do!
#    <<: *backend-container  --> option to inherit

    # These next lines defines a Docker executors: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of the convenience images from CircleCI's Developer Hub
    # A list of available CircleCI Docker convenience images are available here: https://circleci.com/developer/images/image/cimg/python
    # The executor is the environment in which the steps below will be executed - below will use a python 3.9 container
    # Change the version below to your required version of python
    docker:
      - image: circleci/python:3.9
        environment:
          DJANGO_DB_URL: psql://postgres@127.0.0.1:5432/circle_test
          DJANGO_SECRET_KEY: 01001-sekret-for-test-purposes
          DJANGO_REDIS_URL: redis://localhost:6379/1
      - image: circleci/postgres:10.4-alpine-ram
        environment:
          POSTGRES_DB: circle_test
      - image: circleci/redis:4.0-alpine

    parallelism: 3
    # set working directory
#    working_directory: ~/server

    # Checkout the code as the first step. This is a dedicated CircleCI step.
    steps:
      - checkout
#      - load-backend-cache
#      - install-backend-dependencies
#      - save-backend-cache
#      or: This option to install dependencies also work, but can't figure out how to save and restore cache
      - python/install-packages:
          # Path to the directory containing your python project. Not needed if dependency file lives in the root.
          include-python-in-cache-key: false
          app-dir: server
          pkg-manager: pipenv
      - run:
          name: Install wkhtmltopdf
          command: |
            wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
            tar -xvf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
            sudo mv wkhtmltox/bin/wkhtmltopdf /usr/bin/wkhtmltopdf
            sudo mv wkhtmltox/bin/wkhtmltoimage /usr/bin/wkhtmltoimage
      - run:
          name: Run tests
          command: |
            cd server
            pipenv run python manage.py collectstatic --noinput
            pipenv run pytest
      - store_test_results:
          path: ./tests_artifacts
      - store_artifacts:
          path: ./tests_artifacts

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  release-flow:
    jobs:
      - build-and-test:
          filters:
            branches:
              only:
                - /release\/.*/
                - main
